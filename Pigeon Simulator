import pygame
from sys import exit

def display_score():
    time = int(pygame.time.get_ticks() / 100) - start_time
    time_surface = test_font.render(f'Score: {time}',False,("Black"))
    time_rect = time_surface.get_rect(midleft =(15,70))
    screen.blit(time_surface,time_rect)
    return time

# pygame zum benutzen der funktionen
# exit ist notwendig um das spiel korrekt zu schließen

pygame.init()                                           # Main Func
screen = pygame.display.set_mode((800,400))             # Screen
pygame.display.set_caption("AI2IDventure")              # Titel
clock = pygame.time.Clock()
test_font = pygame.font.Font(None, 50)
big_font = pygame.font.Font(None,80)

screen_size = (800,400)

#GAME ACTIVE
game_active = True
start_time = 0
score = 0

#TEXT
titel_surface = test_font.render("Pigeon Simulator:","Comic Sans",(64,64,64))     # (text, AA, Color)
titel_rect = titel_surface.get_rect(midleft =(15,30))

#SCORE
score_surface = test_font.render("Score:","Comic Sans", (64,64,64))
score_rect = score_surface.get_rect(midleft = (15,70))

#Start_screen
game_over_surface = big_font.render("Pigeon Simulator","Comic Sans","Black")
game_over_rect = game_over_surface.get_rect(center =(400,50))
restart_surface = test_font.render("Drück W um zu starten","comic Sans","Black")
restart_rect = restart_surface.get_rect(center =(400,100))
#MAP

map_surface = pygame.image.load("C:\\Users\\Cem\\Desktop\\PyGame assets\\graphics\\map.png").convert()
map_surface = pygame.transform.scale(map_surface,screen_size)

#ENEMY
enemy = pygame.image.load("C:\\Users\\Cem\\Desktop\\PyGame assets\\graphics\\ghost.png").convert_alpha()
enemy_size = (70,70)
enemy = pygame.transform.scale(enemy,enemy_size)
enemy_flipped = pygame.transform.flip(enemy, True,False)
enemy_rect = enemy_flipped.get_rect(center = (730,290))

#PLAYER
main_char_size = (70,70)
main_char_xy = (50,290)
main_char = pygame.image.load("C:\\Users\\Cem\\Desktop\\PyGame assets\\graphics\\pigeon.png").convert_alpha()
main_char = pygame.transform.scale(main_char,main_char_size)
main_char = pygame.transform.flip(main_char,True,False)
main_char_rect = main_char.get_rect(center = (main_char_xy))

# Big Boi
main_big_boi = pygame.image.load("C:\\Users\\Cem\\Desktop\\PyGame assets\\graphics\\pigeon_gameover.png").convert_alpha()
main_big_boi = pygame.transform.scale(main_big_boi,(350,350))
main_big_boi_rect = main_big_boi.get_rect(center = (130,200))

#Gravity
player_gravity = -0

#Timer
obstacle_timer = pygame.USEREVENT + 1
pygame.time.set_timer(obstacle_timer,900)

# wird benutzt um es durchgehend offen zu haben
# Die while True loop updated das game konstant
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()
# Sprung
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                if main_char_rect.bottom >= 340:
                    player_gravity = -20

            if event.key == pygame.K_w:  # Prüfe den Tastendruck auf "W" außerhalb der vorherigen Bedingung
                if not game_active:  # Wenn das Spiel nicht aktiv ist, starte es neu
                    game_active = True
                    enemy_rect.left = 800
                    start_time = int(pygame.time.get_ticks() / 100)

        #if game_active == False:
            #if event.type == pygame.KEYUP and event.key == pygame.K_w:
                #game_active = True
                #enemy_rect.left = 800


# Obstacle Ti
        #if event.type == obstacle_timer:



#   Screen.blit() wird verwendet um eingefügte Bilder in das Programm zu importieren nach dem einfügen von
#   blit.("Name_des_Bildes",(x_koordinate,y_koordinate))

#Game Hintergrund
    if game_active == True:
        screen.blit(map_surface,(0,0))
        screen.blit(titel_surface,titel_rect)
        score = display_score()

    #ENEMY
        screen.blit(enemy_flipped,enemy_rect)
        enemy_rect.x -= 5
        if enemy_rect.right <= 0: enemy_rect.left = 800

    #PLAYER
        player_gravity += 1
        main_char_rect.y += player_gravity
        if main_char_rect.bottom >= 340: main_char_rect.bottom = 340
        screen.blit(main_char,main_char_rect)

    #COLLISION
        if main_char_rect.colliderect(enemy_rect):
            game_active = False

        if game_active == False:
            screen.fill('#66ccff')
            screen.blit(main_big_boi, main_big_boi_rect)
            screen.blit(game_over_surface, game_over_rect)
            screen.blit(restart_surface,restart_rect)
            score_message = test_font.render(f'Deine Punktzahl: {score}',False,"Black")
            score_message_rect = score_message.get_rect(center = (400,330))# nochmal gucken
            #score == 0: screen.blit(restart_surface, restart_rect)

            screen.blit(score_message,score_message_rect)

        # screen.blit wurde auf main_char gesetzt und mit .char.rect
        # kann man zeitgleich die x,y kordinaten mit geben
        pygame.display.update()
        clock.tick(60)

    # Mit .key.get_pressed kann man den input von verschiedenen tasten nachgucken (Liste im internet)
    # Die tasten müssen in einer seperaten Line geschrieben werden und als tuple formuliert werden

        #keys = pygame.key.get_pressed()
        #if keys[pygame.K_SPACE]: print("Pressed")

    #if main_char_rect.colliderect(enemy_rect):
    #   print("collision")

        #mouse_pos = pygame.mouse.get_pos()
        #if main_char_rect.collidepoint(mouse_pos): print("Collide")
